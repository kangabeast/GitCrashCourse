{"ast":null,"code":"import { useRef, useState, useEffect } from \"react\";\nexport const useHoverLeave = () => {\n  const ref = useRef(null);\n  const [hovered, setHovered] = useState(false);\n\n  const enter = () => {\n    setHovered(true);\n  };\n\n  const leave = () => {\n    setHovered(false);\n  };\n\n  useEffect(() => {\n    const node = ref.current;\n\n    if (node) {\n      node.addEventListener(\"mouseover\", enter);\n      node.addEventListener(\"mouseleave\", leave);\n      return () => {\n        node.removeEventListener(\"mouseover\", enter);\n        node.removeEventListener(\"mouseleave\", leave);\n      };\n    }\n  }, [ref]);\n  return [ref, hovered];\n};","map":{"version":3,"sources":["/Users/thaiwg/Desktop/TravelBuddy Project/aws-travelbuddy-react/aws-travelbuddy-react/src/components/function/useHoverLeave.js"],"names":["useRef","useState","useEffect","useHoverLeave","ref","hovered","setHovered","enter","leave","node","current","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAMC,GAAG,GAAGJ,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMM,KAAK,GAAG,MAAM;AAClBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAGA,QAAME,KAAK,GAAG,MAAM;AAClBF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,IAAI,GAAGL,GAAG,CAACM,OAAjB;;AACA,QAAID,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACE,gBAAL,CAAsB,WAAtB,EAAmCJ,KAAnC;AACAE,MAAAA,IAAI,CAACE,gBAAL,CAAsB,YAAtB,EAAoCH,KAApC;AACA,aAAO,MAAM;AACXC,QAAAA,IAAI,CAACG,mBAAL,CAAyB,WAAzB,EAAsCL,KAAtC;AACAE,QAAAA,IAAI,CAACG,mBAAL,CAAyB,YAAzB,EAAuCJ,KAAvC;AACD,OAHD;AAID;AACF,GAVQ,EAUN,CAACJ,GAAD,CAVM,CAAT;AAYA,SAAO,CAACA,GAAD,EAAMC,OAAN,CAAP;AACD,CAvBM","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nexport const useHoverLeave = () => {\n  const ref = useRef(null);\n  const [hovered, setHovered] = useState(false);\n\n  const enter = () => {\n    setHovered(true);\n  };\n  const leave = () => {\n    setHovered(false);\n  };\n  useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(\"mouseover\", enter);\n      node.addEventListener(\"mouseleave\", leave);\n      return () => {\n        node.removeEventListener(\"mouseover\", enter);\n        node.removeEventListener(\"mouseleave\", leave);\n      };\n    }\n  }, [ref]);\n\n  return [ref, hovered];\n};"]},"metadata":{},"sourceType":"module"}